<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Jenkins的下载安装</title>
    <url>/Jenkins%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>在<a href="https://www.jenkins.io/">Jenkins官网</a>下载jenkins有两种方式：</p>
<ul>
<li><p>下载msi，地址：<a href="https://www.jenkins.io/download">jenkins.msi</a>，镜像加速站：<a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/windows-stable/">jenkins.msi</a></p>
</li>
<li><p>下载war包，地址：<a href="https://get.jenkins.io/war-stable/2.332.3/">jenkins.war</a>，镜像加速站：<a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/war-stable/">jenkins.war</a></p>
</li>
</ul>
<p>由于war安装方式需要tomcat容器管理，故tomcat本次安装方式为msi文件安装</p>
<p>安装的Jenkins版本为：2.332.3</p>
<span id="more"></span>

<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4>]]></content>
      <categories>
        <category>专栏</category>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>Jenkins的下载安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux、Shell介绍</title>
    <url>/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="Linux介绍"><a href="#Linux介绍" class="headerlink" title="Linux介绍"></a>Linux介绍</h2><p>说到服务器，那就要聊聊它的操作系统——Liunx了，Linux是一种自由和开放源码的类UNIX操作系统，它是在1991年由Linus Benedict Torvalds（林纳斯）在赫尔辛基大学上学时创立的。Linux是一个基于POXIS的多用户、多任务、支持多线程和多CPU的操作系统，具有性能高、安全等特性，常被运维人员用来当作服务器使用。</p>
<p>它有一个基本思想：一切都是文件</p>
<span id="more"></span>

<h2 id="Linux基本操作"><a href="#Linux基本操作" class="headerlink" title="Linux基本操作"></a>Linux基本操作</h2><p><strong>ls</strong></p>
<p>展示当前目录下的文件</p>
<p><strong>cd [path]</strong></p>
<p>切换到指定目录，其中cd ..为上一级</p>
<p><strong>touch [path&#x2F;filename]</strong></p>
<p>创建文件</p>
<p><strong>vi&#x2F;vim [path&#x2F;filename]</strong></p>
<p>编辑文件，操作可以参考以下图片</p>
<img data-src="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/vi-vim-cheat-sheet-sch.gif" class="">

<p><strong>rm [path&#x2F;filename]</strong></p>
<p>删除文件</p>
<p><strong>yum [software]</strong></p>
<p>安装软件包</p>
<h2 id="Shell介绍"><a href="#Shell介绍" class="headerlink" title="Shell介绍"></a>Shell介绍</h2><p>shell是一个用C语言编写的程序，它是用户使用Linux的桥梁。shell既是一种命令语言，也是一种程序设计语言。</p>
<h2 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h2><p>Shell脚本（shell script），是一种为Shell编写的脚本语言。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.runoob.com/linux/linux-tutorial.html">Linux教程</a></p>
<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建Web应用程序">搭建Web应用程序</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建集成Mybatis的Web应用程序">搭建集成Mybatis的Web应用程序</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux一键安装Java</title>
    <url>/Linux%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Java/</url>
    <content><![CDATA[<p>一键安装Java脚本，一劳永逸</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">echo &quot;---------------uninstall old java ------------------&quot;</span><br><span class="line"><span class="meta">#</span><span class="language-bash">卸载旧版本的java</span></span><br><span class="line">rpm -qa | grep java | xargs rpm -e --nodeps</span><br><span class="line">rpm -qa | grep jdk | xargs rpm -e --nodeps</span><br><span class="line">rpm -qa | grep gcp | xargs rpm -e --nodeps</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">删除旧版本的JAVA_HOME</span></span><br><span class="line">sed -ie &#x27;/JAVA_HOME/d&#x27; /etc/profile</span><br><span class="line">echo &quot;finished&quot;</span><br><span class="line">echo &quot;------------------start yum install java-1.8.0-openjdk --------------&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">yum安装Java</span></span><br><span class="line">yum install java-1.8.0-openjdk* -y</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">在/etc/profile追加JAVA_HOME</span></span><br><span class="line">cat &gt;&gt; /etc/profile&lt;&lt;EOF</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java</span><br><span class="line">export CLASSPATH=.:\$JAVA_HOME/lib/dt.jar:\$JAVA_HOME/lib/tools.jar:\$JAVA_HOME/jre/lib/rt.jar</span><br><span class="line">export PATH=\$PATH:\$JAVA_HOME/bin</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">刷新JAVA_HOME</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">检测是否安装成功</span></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line">echo &quot;----------------yum install java-1.8.0-openjdk success ---------------------&quot;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
        <category>安装Java开发环境</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>安装Java开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux一键安装MySQL</title>
    <url>/Linux%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85MySQL/</url>
    <content><![CDATA[<p>一键安装MySQL5.7脚本，一劳永逸</p>
<h4 id="MySQL5-0脚本"><a href="#MySQL5-0脚本" class="headerlink" title="MySQL5.0脚本"></a>MySQL5.0脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">提示：本脚本只支持centos 7 安装MySQL版本5.7</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">安装完成后脚本会打印出MySQL的root用户的初始登录密码</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">mysql -u root -p</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">输入初始密码即可登录</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.36-el7-x86_64.tar.gz</span></span><br><span class="line">REMOVE=`rpm -qa | grep -i mariadb-libs`</span><br><span class="line"><span class="meta">#</span><span class="language-bash">卸载系统预置的mariadb</span></span><br><span class="line">yum remove $REMOVE -y</span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装依赖库</span></span><br><span class="line">yum install libaio -y</span><br><span class="line">yum install libncurses* -y</span><br><span class="line">yum install wget -y</span><br><span class="line"><span class="meta">#</span><span class="language-bash">下载</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.36-el7-x86_64.tar.gz</span><br><span class="line">tar -zxvf mysql-5.7.36-el7-x86_64.tar.gz</span><br><span class="line">mv mysql-5.7.36-el7-x86_64 mysql</span><br><span class="line">mv mysql /usr/local/</span><br><span class="line">useradd -s/sbin/nlogin -M mysql</span><br><span class="line">id mysql</span><br><span class="line">mkdir /usr/local/mysql/&#123;data,log&#125;</span><br><span class="line">chown -R mysql.mysql /usr/local/mysql/</span><br><span class="line"><span class="meta">#</span><span class="language-bash">编辑my.cnf</span></span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line">server_id=10</span><br><span class="line">port = 3306</span><br><span class="line">user = mysql</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">default_storage_engine = innodb</span><br><span class="line">log_timestamps = SYSTEM</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /usr/local/mysql/data/</span><br><span class="line">pid-file = /usr/local/mysql/data/mysql.pid</span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 1000</span><br><span class="line">table_open_cache = 1024</span><br><span class="line">max_allowed_packet = 128M</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">####====================================[innodb]==============================</span></span></span><br><span class="line">innodb_buffer_pool_size = 1024M</span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_purge_threads = 2</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line">innodb_log_file_size = 512M</span><br><span class="line">innodb_log_files_in_group = 2</span><br><span class="line">innodb_log_buffer_size = 16M</span><br><span class="line">innodb_max_dirty_pages_pct = 80</span><br><span class="line">innodb_lock_wait_timeout = 30</span><br><span class="line">innodb_data_file_path=ibdata1:1024M:autoextend</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">####====================================[log]==============================</span></span></span><br><span class="line">log_error = /usr/local/mysql/log/mysql-error.log </span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1 </span><br><span class="line">slow_query_log_file = /usr/local/mysql/log/mysql-slow.log</span><br><span class="line"> </span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">编译</span></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --innodb_undo_tablespaces=3 --explicit_defaults_for_timestamp</span><br><span class="line"><span class="meta">#</span><span class="language-bash">授权</span></span><br><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line">chmod +x /etc/init.d/mysql</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig --list</span><br><span class="line">cp /usr/local/mysql/bin/* /usr/local/sbin/</span><br><span class="line">cd /lib/systemd/system</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 启动服务并查看</span></span></span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line">netstat -lntup|grep mysql</span><br><span class="line">grep &quot;password&quot; /usr/local/mysql/log/mysql-error.log </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="MySQL8-0脚本"><a href="#MySQL8-0脚本" class="headerlink" title="MySQL8.0脚本"></a>MySQL8.0脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">使用</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">去到https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">选中合适的mysql版本并修改脚本中的链接</span></span><br><span class="line"></span><br><span class="line">export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin</span><br><span class="line"></span><br><span class="line">Install_MySQL() &#123;</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">CentOS 8 mysql: error <span class="keyword">while</span> loading shared libraries: libncurses.so.5</span></span><br><span class="line">	yum install ncurses ncurses-compat-libs -y</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Install dependencies</span></span><br><span class="line">	setenforce 0</span><br><span class="line">	yum -y install epel-release</span><br><span class="line">	yum -y install wget tar jemalloc jemalloc-devel gcc gcc-c++</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">MySQL configuration</span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">此处应当进行适当修改</span></span><br><span class="line">	mysql_version=&quot;8.0.26&quot;</span><br><span class="line">	mysql_password=&quot;123456&quot;</span><br><span class="line">	mkdir -p /apps/server/mysql/data</span><br><span class="line">	mysql_install_dir=&quot;/usr/local/mysql&quot;</span><br><span class="line">	mysql_data_dir=&quot;/usr/local/mysql/data&quot;</span><br><span class="line">	download_mysql=&quot;https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Download MySQL</span></span><br><span class="line">	cd /mnt</span><br><span class="line">	useradd -M -s /sbin/nologin mysql &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">	wget -c $&#123;download_mysql&#125;/MySQL-8.0/mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64.tar.xz --no-check-certificate</span><br><span class="line">    echo &quot;========== Start installing MySQL ============&quot;</span><br><span class="line">	tar xJf mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line">	mkdir $&#123;mysql_install_dir&#125;</span><br><span class="line">	mv mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64/* $&#123;mysql_install_dir&#125;/</span><br><span class="line">	</span><br><span class="line">	if [[ -d &quot;$&#123;mysql_install_dir&#125;/support-files&quot; ]]; then</span><br><span class="line">		rm -rf mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64</span><br><span class="line">	else</span><br><span class="line">		rm -rf $&#123;mysql_install_dir&#125;</span><br><span class="line">		echo &quot;Error: MySQL install failed, Please contact the author&quot;</span><br><span class="line">		kill -9 $$</span><br><span class="line">	fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Initialize the database</span></span><br><span class="line"><span class="meta">	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysqld --initialize-insecure --user=mysql --basedir=<span class="variable">$&#123;mysql_install_dir&#125;</span> --datadir=<span class="variable">$&#123;mysql_data_dir&#125;</span></span></span><br><span class="line">	chown -R root . $&#123;mysql_install_dir&#125;</span><br><span class="line">	chown -R mysql.mysql $&#123;mysql_data_dir&#125;</span><br><span class="line">	cp -f $&#123;mysql_install_dir&#125;/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@^basedir=.*@basedir=$&#123;mysql_install_dir&#125;@&quot; /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@^datadir=.*@datadir=$&#123;mysql_data_dir&#125;@&quot; /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@/usr/local/mysql@$&#123;mysql_install_dir&#125;@g&quot; $&#123;mysql_install_dir&#125;/bin/mysqld_safe</span><br><span class="line">	sed -i &#x27;s@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/lib64/libjemalloc.so@&#x27; $&#123;mysql_install_dir&#125;/bin/mysqld_safe</span><br><span class="line"><span class="meta">	#</span><span class="language-bash">删除配置文件中原有的环境变量</span></span><br><span class="line">	sed -ie &#x27;/MYSQL_HOME/d&#x27; /etc/profile</span><br><span class="line"><span class="meta">	#</span><span class="language-bash">修改mysql的环境变量，直接写入配置文件</span></span><br><span class="line">	echo &quot;export MYSQL_HOME=$&#123;mysql_install_dir&#125;&quot; &gt;&gt;/etc/profile</span><br><span class="line">	echo &quot;export PATH=\$PATH:\$MYSQL_HOME/bin&quot; &gt;&gt;/etc/profile</span><br><span class="line">	source /etc/profile</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">my.conf configuration</span></span><br><span class="line">	cat &gt; /etc/my.cnf &lt;&lt; EOF</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=&quot;MySQL [\\d]&gt; &quot;</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default_authentication_plugin = mysql_native_password</span><br><span class="line"></span><br><span class="line">basedir = $&#123;mysql_install_dir&#125;</span><br><span class="line">datadir = $&#123;mysql_data_dir&#125;</span><br><span class="line">pid-file = $&#123;mysql_data_dir&#125;/mysql.pid</span><br><span class="line">user = mysql</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">init-connect = &#x27;SET NAMES utf8mb4&#x27;</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_0900_ai_ci</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="meta">#</span><span class="language-bash">skip-networking</span></span><br><span class="line">back_log = 300</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">binlog_expire_logs_seconds = 604800</span><br><span class="line"></span><br><span class="line">log_error = $&#123;mysql_data_dir&#125;/mysql-error.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">slow_query_log_file = $&#123;mysql_data_dir&#125;/mysql-slow.log</span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="meta">#</span><span class="language-bash">default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Set up MySQL</span></span><br><span class="line">	chmod 600 /etc/my.cnf</span><br><span class="line">	chmod +x /etc/init.d/mysqld</span><br><span class="line">	cp /etc/init.d/mysqld /usr/bin</span><br><span class="line">	systemctl enable mysqld</span><br><span class="line">  	systemctl start mysqld</span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;create user root@&#x27;127.0.0.1&#x27; identified by \&quot;<span class="variable">$&#123;mysql_password&#125;</span>\&quot;;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;127.0.0.1&#x27; with grant option;&quot;</span></span></span><br><span class="line"><span class="meta"> 	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;localhost&#x27; with grant option;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;alter user root@&#x27;localhost&#x27; identified by \&quot;<span class="variable">$&#123;mysql_password&#125;</span>\&quot;;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -p<span class="variable">$&#123;mysql_password&#125;</span> -e <span class="string">&quot;reset master;&quot;</span></span></span><br><span class="line">  	rm -rf /etc/ld.so.conf.d/&#123;mysql,mariadb,percona,alisql&#125;*.conf</span><br><span class="line">  	echo &quot;$&#123;mysql_install_dir&#125;/lib&quot; &gt; /etc/ld.so.conf.d/mysql_renwole.com.conf</span><br><span class="line">  	ldconfig</span><br><span class="line">  	echo &quot;========== MySQL installing Successfully =====&quot;</span><br><span class="line">	echo &quot;MySQL:&quot;</span><br><span class="line">	echo &quot;account: root&quot;</span><br><span class="line">	echo &quot;password: $&#123;mysql_password&#125;&quot;</span><br><span class="line">	echo &quot;database: $&#123;mysql_data_dir&#125;&quot;</span><br><span class="line">	echo &quot;==============================================&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Install_MySQL</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h4 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h4><p>脚本执行后最后一行输出一下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Note] A temporary password is generated for root@localhost: 2t&lt;q#r;&gt;2EBM</span><br></pre></td></tr></table></figure>

<p>输入以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<p>将2t&lt;q#r;&gt;2EBM输入即可登陆，注意输入时密码不回显</p>
<img data-src="/Linux%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85MySQL/MySQL%E7%99%BB%E9%99%86.png" class="">

<p>登陆成功后修改密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>

<p>123456就是root用户的登陆密码</p>
<h4 id="允许远程连接"><a href="#允许远程连接" class="headerlink" title="允许远程连接"></a>允许远程连接</h4><ul>
<li>新建用户允许远程连接</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grant all on *.* to admin@&#x27;%&#x27; identified by &#x27;123456&#x27; with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<ul>
<li>现有用户下允许远程连接</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host=&#x27;%&#x27; where user=&#x27;root&#x27; and host=&#x27;localhost&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<ul>
<li>查看用户</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">select host,user from user;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>专栏</category>
        <category>MySQL</category>
        <category>安装MySQL开发环境</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>安装MySQL开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux一键安装Redis</title>
    <url>/Linux%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Redis/</url>
    <content><![CDATA[<p>一键安装Redis脚本，一劳永逸</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!bin/sh</span></span><br><span class="line">cd ~</span><br><span class="line">FILE=/root/redis-5.0.8.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">判断文件是否存在</span></span><br><span class="line">if test -f &quot;$FILE&quot;; then</span><br><span class="line">    echo &quot;$FILE exist&quot;</span><br><span class="line">	else</span><br><span class="line">		wget http://download.redis.io/releases/redis-5.0.8.tar.gz</span><br><span class="line">fi</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解压安装包</span></span><br><span class="line">tar -zxvf redis-5.0.8.tar.gz</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重命名</span></span><br><span class="line">mv redis-5.0.8 redis</span><br><span class="line"><span class="meta"># </span><span class="language-bash">移动文件</span></span><br><span class="line">mv -f redis /usr/local/redis</span><br><span class="line"></span><br><span class="line">cd /usr/local/redis</span><br><span class="line">mkdir data</span><br><span class="line"></span><br><span class="line">make MALLOC=lib</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">cp /usr/local/redis/redis.conf /etc/redis/6354.conf</span><br><span class="line"></span><br><span class="line">cd /etc/init.d</span><br><span class="line">touch redis</span><br><span class="line">chmod 777 redis</span><br><span class="line">cat &lt;&lt; EOF &gt; redis</span><br><span class="line"></span><br><span class="line">REDISPORT=6354</span><br><span class="line">EXEC=/usr/local/redis/src/redis-server</span><br><span class="line">CLIEXEC=/usr/local/redis/src/redis-cli</span><br><span class="line">password=&quot;Admin123&quot;</span><br><span class="line"></span><br><span class="line">PIDFILE=/var/run/redis_$&#123;REDISPORT&#125;.pid</span><br><span class="line">CONF=&quot;/etc/redis/$&#123;REDISPORT&#125;.conf&quot;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        if [ -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;$PIDFILE exists, process is already running or crashed&quot;</span><br><span class="line">        else</span><br><span class="line">                echo &quot;Starting Redis server...&quot;</span><br><span class="line">                $EXEC $CONF</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ ! -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;$PIDFILE does not exist, process is not running&quot;</span><br><span class="line">        else</span><br><span class="line">                PID=$(cat $PIDFILE)</span><br><span class="line">                echo &quot;Stopping ...&quot;</span><br><span class="line">                $CLIEXEC -a $password  -p $REDISPORT shutdown</span><br><span class="line">                while [ -x /proc/$&#123;PID&#125; ]</span><br><span class="line">                do</span><br><span class="line">                    echo &quot;Waiting for Redis to shutdown ...&quot;</span><br><span class="line">                    sleep 1</span><br><span class="line">                done</span><br><span class="line">                echo &quot;Redis stopped&quot;</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Please use start or stop as first argument&quot;</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chkconfig --add redis</span><br><span class="line">chkconfig --list redis</span><br><span class="line"></span><br><span class="line">service redis start</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>专栏</category>
        <category>Redis</category>
        <category>安装Redis开发环境</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>安装Redis开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title>STL容器-set</title>
    <url>/STL%E5%AE%B9%E5%99%A8-set/</url>
    <content><![CDATA[<h2 id="set介绍"><a href="#set介绍" class="headerlink" title="set介绍"></a>set介绍</h2><p><strong><a href="http://c.biancheng.net/view/7192.html">参考链接</a></strong></p>
<p>set是STL中的一种关联容器，它的底层是红黑树，也称为RB树(Red-Black Tree)，同样底层采用了红黑树的容器还有multiset, map, multimap。它是用来存储同一数据类型的数据类型，并且能从一个数据集合中取出数据，在set中每个元素的值都唯一，而且能根据元素的值自动进行排序(默认升序)。</p>
<span id="more"></span>

<h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">set&lt;<span class="type">int</span>&gt;sc;<span class="comment">//定义</span></span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">8</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">3</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">4</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">2</span>);</span><br><span class="line">sc.<span class="built_in">insert</span>(<span class="number">1</span>);<span class="comment">//插入指定元素</span></span><br><span class="line">sc.<span class="built_in">begin</span>();<span class="comment">//指向sc第一个元素的迭代器</span></span><br><span class="line">sc.<span class="built_in">end</span>();<span class="comment">//指向sc最后一个元素之后的迭代器</span></span><br><span class="line">sc.<span class="built_in">erase</span>(<span class="number">1</span>);<span class="comment">//删除指定元素，删除成功返回1，否则返回0</span></span><br><span class="line">sc.<span class="built_in">empty</span>();<span class="comment">//判断是否为空，为空返回1，否则返回0</span></span><br><span class="line">sc.<span class="built_in">find</span>(<span class="number">1</span>)<span class="comment">//查找1这个元素，找到返回此元素迭代器，没有找到返回myset.end()</span></span><br><span class="line">sc.<span class="built_in">size</span>();<span class="comment">//返回sc的元素个数</span></span><br><span class="line">sc.<span class="built_in">count</span>(<span class="number">1</span>)<span class="comment">//对1进行计数，存在返回1，不存在返回0</span></span><br><span class="line"><span class="comment">//set的遍历</span></span><br><span class="line"><span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;::iterator it=sc.<span class="built_in">begin</span>();it!=sc.<span class="built_in">end</span>();it++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*it);</span><br><span class="line"></span><br><span class="line">sc.<span class="built_in">lower_bound</span>(<span class="number">1</span>)<span class="comment">//寻找第一个大于等于1的元素，返回此元素迭代器，未找到返回sc.end()</span></span><br><span class="line">sc.<span class="built_in">upper_bound</span>(<span class="number">1</span>)<span class="comment">//寻找第一个大于1的元素，返回此元素迭代器，未找到返回sc.end()</span></span><br></pre></td></tr></table></figure>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	set&lt;<span class="type">int</span>&gt; sc;</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">1</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">8</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">3</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">4</span>);</span><br><span class="line">	sc.<span class="built_in">insert</span>(<span class="number">2</span>);</span><br><span class="line">	sc.<span class="built_in">erase</span>(<span class="number">3</span>);</span><br><span class="line">	<span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;::iterator it=sc.<span class="built_in">begin</span>();it!=sc.<span class="built_in">end</span>();it++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*it);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	sc.<span class="built_in">erase</span>(*sc.<span class="built_in">lower_bound</span>(<span class="number">4</span>));</span><br><span class="line">	<span class="keyword">for</span>(set&lt;<span class="type">int</span>&gt;::iterator it=sc.<span class="built_in">begin</span>();it!=sc.<span class="built_in">end</span>();it++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*it);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1248</span><br><span class="line">128</span><br></pre></td></tr></table></figure>

<h2 id="练习题目"><a href="#练习题目" class="headerlink" title="练习题目"></a>练习题目</h2><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805070149828608">集合相似度</a></strong></p>
<p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805063166312448">列车调度</a></strong></p>
<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/STL%E5%AE%B9%E5%99%A8-set/" title="STL容器-set">STL容器-set</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>数据结构</category>
        <category>STL</category>
      </categories>
      <tags>
        <tag>STL</tag>
        <tag>set</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot集成WebSocket的简单示例</title>
    <url>/SpringBoot%E9%9B%86%E6%88%90WebSocket%E7%9A%84%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​        WebSocket是一种浏览器与服务器之间进行全双工的通信协议，属于应用层协议，基于Http协议。它有以下几个优点：</p>
<ul>
<li><p>WebSocket可以在浏览器里使用；</p>
</li>
<li><p>支持双向通信，实时性更强；</p>
</li>
<li><p>使用很简单。</p>
<p>后面将用一个小例子来学习WebSocket。</p>
</li>
</ul>
<span id="more"></span>

<h3 id="创建SpringBoot工程"><a href="#创建SpringBoot工程" class="headerlink" title="创建SpringBoot工程"></a>创建SpringBoot工程</h3><p>​    选择File-&gt;New Project-&gt;Spring Initializr，两次next，选择Web-&gt;Srping Web，点击finish创建，目录结构：</p>
<img data-src="/SpringBoot%E9%9B%86%E6%88%90WebSocket%E7%9A%84%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" class="">

<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="创建消息实体"><a href="#创建消息实体" class="headerlink" title="创建消息实体"></a>创建消息实体</h3><p>​        对于Websocket来说，消息实体承载着服务端与客户端之间通信，需要接受者、发送者以及消息内容三个基本元素。故可构造以下实体：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.im.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/15/16:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Message</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String from;<span class="comment">//发送者</span></span><br><span class="line">    <span class="keyword">private</span> String to;<span class="comment">//接收者</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> type;<span class="comment">//消息类型</span></span><br><span class="line">    <span class="keyword">private</span> String info;<span class="comment">//消息内容</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Message</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Message</span><span class="params">(String from, String to, <span class="type">int</span> type, String info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.from = from;</span><br><span class="line">        <span class="built_in">this</span>.to = to;</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Message&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;from=&#x27;&quot;</span> + from + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, to=&#x27;&quot;</span> + to + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, type=&quot;</span> + type +</span><br><span class="line">                <span class="string">&quot;, info=&#x27;&quot;</span> + info + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFrom</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> from;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFrom</span><span class="params">(String from)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.from = from;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> to;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTo</span><span class="params">(String to)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.to = to;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setType</span><span class="params">(<span class="type">int</span> type)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInfo</span><span class="params">(String info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="配置MvcConfig，注入ServerEndpointExporter"><a href="#配置MvcConfig，注入ServerEndpointExporter" class="headerlink" title="配置MvcConfig，注入ServerEndpointExporter"></a>配置MvcConfig，注入ServerEndpointExporter</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.im.testCase.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.socket.server.standard.ServerEndpointExporter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Spring MVC 配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> panghai</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(WebMvcConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//服务器支持跨域</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>,<span class="string">&quot;OPTIONS&quot;</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .exposedHeaders(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Access-Control-Max-Age&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;X-Frame-Options&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">false</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The bean shown in the preceding example registers any <span class="doctag">@ServerEndpoint</span></span></span><br><span class="line"><span class="comment">     * annotated beans with the underlying WebSocket container. When deployed to a</span></span><br><span class="line"><span class="comment">     * standalone servlet container, this role is performed by a servlet container</span></span><br><span class="line"><span class="comment">     * initializer, and the ServerEndpointExporter bean is not required.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 在Spring中可以直接使用Java WebSocket API来提供服务，</span></span><br><span class="line"><span class="comment">     * 如果使用内置的web容器，需要做的仅仅是需要在下面添加</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/** 注入ServerEndpointExporter，这个bean会自动注册使用了<span class="doctag">@ServerEndpoint</span>注解</span></span><br><span class="line"><span class="comment">     * 要注意，如果使用独立的servlet容器,而不是直接使用springboot的内置容器</span></span><br><span class="line"><span class="comment">     * 就不要注入ServerEndpointExporter，因为它将由容器自己提供和管理。</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServerEndpointExporter <span class="title function_">serverEndpointExporter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ServerEndpointExporter</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="创建访问路径"><a href="#创建访问路径" class="headerlink" title="创建访问路径"></a>创建访问路径</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.im.testCase.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/16/19:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserModel</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/websocket&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">websocket</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;websocket&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="增加Websocket控制器"><a href="#增加Websocket控制器" class="headerlink" title="增加Websocket控制器"></a>增加Websocket控制器</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.im.testCase.websocket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.example.im.entity.Message;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.*;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.ServerEndpoint;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/16/20:23</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ServerEndpoint(&quot;/websocket&quot;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserWebsocket</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ConcurrentHashMap&lt;String, Session&gt; map = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnMessage</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(String message, Session session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Message</span> <span class="variable">m</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            m = JSON.parseObject(message, Message.class);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Received：&quot;</span> + message);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(m.getFrom(), session);</span><br><span class="line">        <span class="type">Session</span> <span class="variable">s</span> <span class="operator">=</span> map.get(m.getTo());</span><br><span class="line">        <span class="keyword">if</span> (s != <span class="literal">null</span>) &#123;</span><br><span class="line">            s.getBasicRemote().sendText(message);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            m.setInfo(<span class="string">&quot;查无此人&quot;</span>);</span><br><span class="line">            session.getBasicRemote().sendText(JSON.toJSONString(m));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnOpen</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onOpen</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Client connected&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@OnClose</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClose</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Connection closed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="创建用户界面"><a href="#创建用户界面" class="headerlink" title="创建用户界面"></a>创建用户界面</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">发送者：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;from&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">接收者：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;to&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">内容：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;message&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">onclick</span>=<span class="string">&quot;sendMessage()&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;white-space: pre-line;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;receiver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;ws://localhost:8080/websocket&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    ws.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params">evt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connection open ...&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        ws.<span class="title function_">send</span>(<span class="string">&quot;Hello WebSockets!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    ws.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">evt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> <span class="keyword">from</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;from&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> receiver = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;receiver&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> receiverMsg = receiver.<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(evt.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="keyword">from</span> === data[<span class="string">&quot;from&quot;</span>]) &#123;</span></span><br><span class="line"><span class="language-javascript">            receiverMsg += data[<span class="string">&quot;to&quot;</span>] + <span class="string">&quot;：&quot;</span> + data[<span class="string">&quot;info&quot;</span>] + <span class="string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            receiverMsg += data[<span class="string">&quot;from&quot;</span>] + <span class="string">&quot;：&quot;</span> + data[<span class="string">&quot;info&quot;</span>] + <span class="string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        receiver.<span class="property">textContent</span> = receiverMsg;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    ws.<span class="property">onclose</span> = <span class="keyword">function</span>(<span class="params">evt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connection closed.&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> <span class="keyword">from</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;from&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> to = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;to&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> info = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;message&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> receiver = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;receiver&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> message = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        message[<span class="string">&quot;from&quot;</span>] = <span class="keyword">from</span>;</span></span><br><span class="line"><span class="language-javascript">        message[<span class="string">&quot;to&quot;</span>] = to;</span></span><br><span class="line"><span class="language-javascript">        message[<span class="string">&quot;info&quot;</span>] = info;</span></span><br><span class="line"><span class="language-javascript">        ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(message));</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> receiverMsg = receiver.<span class="property">textContent</span>;</span></span><br><span class="line"><span class="language-javascript">        receiverMsg += <span class="keyword">from</span> + <span class="string">&quot;：&quot;</span> + info + <span class="string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        receiver.<span class="property">textContent</span> = receiverMsg;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动，使用两个浏览器分别访问<a href="http://localhost:8080/websocket">http://localhost:8080/websocket</a></p>
<img data-src="/SpringBoot%E9%9B%86%E6%88%90WebSocket%E7%9A%84%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B/%E6%B5%8B%E8%AF%95.png" class="">

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>​        Websocket是一个在不可靠的通信中以较少的代价建立可靠的连接，给我们进行一些实时性比较强的开发提供了很好的解决方案。</p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Java技术栈</category>
        <category>WebSocket</category>
      </categories>
      <tags>
        <tag>WebSocket</tag>
        <tag>SpringBoot</tag>
        <tag>通信协议</tag>
        <tag>全双工通讯</tag>
      </tags>
  </entry>
  <entry>
    <title>天梯训练赛(1.28~2.03)</title>
    <url>/%E5%A4%A9%E6%A2%AF%E8%AE%AD%E7%BB%83%E8%B5%9B(1.28~2.03)/</url>
    <content><![CDATA[<h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>getchar函数以及atio函数的用法、结构体数组的初始化、set容器的使用</p>
<span id="more"></span>

<h3 id="输出GPLT"><a href="#输出GPLT" class="headerlink" title="输出GPLT"></a><strong>输出GPLT</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805113036587008">原题链接</a></strong></p>
<p>给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按<code>GPLTGPLT....</code>这样的顺序输出，并忽略其它字符。当然，四种字符（不区分大小写）的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按<code>GPLT</code>的顺序打印，直到所有字符都被输出。</p>
<h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。</p>
<h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中按题目要求输出排序后的字符串。题目保证输出非空。</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pcTclnGloRgLrtLhgljkLhGFauPewSKgt</span><br></pre></td></tr></table></figure>

<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GPLTGPLTGLTGLGLL</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路："><a href="#个人解题思路：" class="headerlink" title="个人解题思路："></a>个人解题思路：</h4><p>4种字符的数量需要保存下来，在这里我用了结构体来记住字符数量，不过相比网上的方法有点麻烦.PS:就当复习了结构体的知识吧</p>
<p>需要注意的是结构体数组的初始化</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CODE code[<span class="number">4</span>]=&#123;&#123;<span class="number">0</span>,<span class="string">&#x27;G&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;P&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;L&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;T&#x27;</span>&#125;&#125;;</span><br></pre></td></tr></table></figure>

<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">CODE</span>&#123;<span class="comment">//定义一个字符结构体</span></span><br><span class="line">	<span class="type">int</span> count;</span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">10001</span>];</span><br><span class="line">	CODE code[<span class="number">4</span>]=&#123;&#123;<span class="number">0</span>,<span class="string">&#x27;G&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;P&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;L&#x27;</span>&#125;,&#123;<span class="number">0</span>,<span class="string">&#x27;T&#x27;</span>&#125;&#125;;<span class="comment">//定义结构体并初始化</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)<span class="comment">//遍历字符串</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)<span class="comment">//每一个字符都要与PGLT(还有小写)进行比较</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==code[j].ch||a[i]<span class="number">-32</span>==code[j].ch)</span><br><span class="line">			&#123;</span><br><span class="line">				code[j].count++;<span class="comment">//对应字符数量增加1</span></span><br><span class="line">				<span class="keyword">break</span>;<span class="comment">//因为已经判断相等了,所以没必要继续比较,直接结束循环</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(code[<span class="number">0</span>].count==<span class="number">0</span>&amp;&amp;code[<span class="number">1</span>].count==<span class="number">0</span>&amp;&amp;code[<span class="number">2</span>].count==<span class="number">0</span>&amp;&amp;code[<span class="number">3</span>].count==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">break</span>;<span class="comment">//只有当4种字符的数量为0时循环结束</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//遍历4种字符</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(code[i].count!=<span class="number">0</span>)&#123;<span class="comment">//前提:字符数量不能为0</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,code[i].ch);</span><br><span class="line">				code[i].count--;<span class="comment">//记得数量减1</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="网上解题思路"><a href="#网上解题思路" class="headerlink" title="网上解题思路"></a>网上解题思路</h4><p>网上的方法比较好理解:用4个变量临时存储这四种字符的个数，每次输出字符时对应变量减1。</p>
<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">10001</span>];</span><br><span class="line">	<span class="type">int</span> p,g,l,t;<span class="comment">//定义4种字符数量</span></span><br><span class="line">	p=g=l=t=<span class="number">0</span>;<span class="comment">//初始化0</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)<span class="comment">//遍历字符串</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;g&#x27;</span>||a[i]==<span class="string">&#x27;G&#x27;</span>)g++;<span class="comment">//比较对应字符,数量增加1</span></span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;p&#x27;</span>||a[i]==<span class="string">&#x27;P&#x27;</span>)p++;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;l&#x27;</span>||a[i]==<span class="string">&#x27;L&#x27;</span>)l++;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="string">&#x27;t&#x27;</span>||a[i]==<span class="string">&#x27;T&#x27;</span>)t++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="number">0</span>||g!=<span class="number">0</span>||l!=<span class="number">0</span>||t!=<span class="number">0</span>)&#123;<span class="comment">//只有当所有字符数量为0时推出循环</span></span><br><span class="line">		<span class="keyword">if</span>(g)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;G&quot;</span>);</span><br><span class="line">			g--;<span class="comment">//记得减1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(p)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;P&quot;</span>);</span><br><span class="line">			p--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(l)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;L&quot;</span>);</span><br><span class="line">			l--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(t)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;T&quot;</span>);</span><br><span class="line">			t--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="正整数A-B"><a href="#正整数A-B" class="headerlink" title="正整数A+B"></a><strong>正整数A+B</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805110318678016">原题链接</a></strong></p>
<p>题的目标很简单，就是求两个正整数<code>A</code>和<code>B</code>的和，其中<code>A</code>和<code>B</code>都在区间[1,1000]。稍微有点麻烦的是，输入并不保证是两个正整数。</p>
<h4 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行给出<code>A</code>和<code>B</code>，其间以空格分开。问题是<code>A</code>和<code>B</code>不一定是满足要求的正整数，有时候可能是超出范围的数字、负数、带小数点的实数、甚至是一堆乱码。</p>
<p>注意：我们把输入中出现的第1个空格认为是<code>A</code>和<code>B</code>的分隔。题目保证至少存在一个空格，并且<code>B</code>不是一个空字符串。</p>
<h4 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h4><p>如果输入的确是两个正整数，则按格式<code>A + B = 和</code>输出。如果某个输入不合要求，则在相应位置输出<code>?</code>，显然此时和也是<code>?</code>。</p>
<h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123 456</span><br></pre></td></tr></table></figure>

<h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123 + 456 = 579</span><br></pre></td></tr></table></figure>

<h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">22. 18</span><br></pre></td></tr></table></figure>

<h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? + 18 = ?</span><br></pre></td></tr></table></figure>

<h4 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-100 blabla bla...33</span><br></pre></td></tr></table></figure>

<h4 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? + ? = ?</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路"><a href="#个人解题思路" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>分别输入这两个字符串,分别对其判断是否为[1,1000]的正整数,并判断输出</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> a[<span class="number">10</span>],b[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,a,b);</span><br></pre></td></tr></table></figure>

<p>但这里有个bug,当输入的字符b中有空格的话,输入就会结束,这里应当用getchar()函数来判断下一个字符是空格结束输入还是换行结束输入.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">if</span>(c!=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">//不是换行导致结束输入的,应分情况</span></span><br></pre></td></tr></table></figure>

<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">jude</span><span class="params">(<span class="type">char</span> ch[])</span><span class="comment">//判断函数是否符合[1,1000]的正整数的条件,符合返回1,不符合返回0</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;ch[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(ch[i]&lt;<span class="string">&#x27;0&#x27;</span>||ch[i]&gt;<span class="string">&#x27;9&#x27;</span>)<span class="comment">//判断正整数</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;<span class="number">4</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//位数不符合的情况</span></span><br><span class="line">	<span class="keyword">if</span>(i==<span class="number">1</span>&amp;&amp;ch[<span class="number">0</span>]==<span class="string">&#x27;0&#x27;</span>)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//只有1位数时不符合的情况</span></span><br><span class="line">	<span class="keyword">if</span>(i==<span class="number">4</span>)<span class="comment">//4位数时不符合的情况</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(ch[<span class="number">0</span>]!=<span class="string">&#x27;1&#x27;</span>||ch[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span>||ch[<span class="number">2</span>]!=<span class="string">&#x27;0&#x27;</span>||ch[<span class="number">3</span>]!=<span class="string">&#x27;0&#x27;</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">10</span>],b[<span class="number">10</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,a,b);</span><br><span class="line">	<span class="type">char</span> c = <span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">jude</span>(a)==<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">jude</span>(b)==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;? + ? = ?&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;? + %s = ?&quot;</span>,b);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">jude</span>(b)==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%s + ? = ?&quot;</span>,a);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(c!=<span class="string">&#x27;\n&#x27;</span>)<span class="comment">//如果不是换行结束输入的代表B字符有问题</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s + ? = ?&quot;</span>,a);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s + %s = %d&quot;</span>,a,b,<span class="built_in">atoi</span>(a)+<span class="built_in">atoi</span>(b));<span class="comment">//atoi()字符串转整型函数</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="网上解题思路-1"><a href="#网上解题思路-1" class="headerlink" title="网上解题思路"></a>网上解题思路</h4><p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> c;</span><br><span class="line">	<span class="type">int</span> fa=<span class="number">0</span>,fb=<span class="number">0</span>;<span class="comment">//符合情况变量,默认符合</span></span><br><span class="line">	<span class="type">int</span> sum1=<span class="number">0</span>,sum2=<span class="number">0</span>;<span class="comment">//和</span></span><br><span class="line">	<span class="keyword">while</span>((c=<span class="built_in">getchar</span>())!=EOF&amp;&amp;c!=<span class="string">&#x27; &#x27;</span>)&#123;<span class="comment">//getchar()获取输入字符的一个,空格或换行结束循环</span></span><br><span class="line">		<span class="keyword">if</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)fa=<span class="number">1</span>;<span class="comment">//非正整数</span></span><br><span class="line">		sum1*=<span class="number">10</span>;<span class="comment">//位数加1时,要扩大10倍</span></span><br><span class="line">		sum1+=c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(sum1&gt;<span class="number">1000</span>||sum1&lt;<span class="number">1</span>)fa=<span class="number">1</span>;<span class="comment">//位数不符合</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>((c=<span class="built_in">getchar</span>())!=EOF&amp;&amp;c!=<span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)fb=<span class="number">1</span>;</span><br><span class="line">		sum2*=<span class="number">10</span>;</span><br><span class="line">		sum2+=c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(sum2&gt;<span class="number">1000</span>||sum2&lt;<span class="number">1</span>)fb=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(fa==<span class="number">0</span>&amp;&amp;fb==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d + %d = %d&quot;</span>,sum1,sum2,sum1+sum2);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(fa==<span class="number">0</span>&amp;&amp;fb==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d + ? = ?&quot;</span>,sum1);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(fa==<span class="number">1</span>&amp;&amp;fb==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;? + %d = ?&quot;</span>,sum2);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(fa==<span class="number">1</span>&amp;&amp;fb==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">&quot;? + ? = ?&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="一帮一"><a href="#一帮一" class="headerlink" title="一帮一"></a><strong>一帮一</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805103557459968">原题链接</a></strong></p>
<p>“一帮一学习小组”是中小学中常见的学习组织方式，老师把学习成绩靠前的学生跟学习成绩靠后的学生排在一组。本题就请你编写程序帮助老师自动完成这个分配工作，即在得到全班学生的排名后，在当前尚未分组的学生中，将名次最靠前的学生与名次最靠后的<strong>异性</strong>学生分为一组。</p>
<h4 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出正偶数<code>N</code>（≤50），即全班学生的人数。此后<code>N</code>行，按照名次从高到低的顺序给出每个学生的性别（0代表女生，1代表男生）和姓名（不超过8个英文字母的非空字符串），其间以1个空格分隔。这里保证本班男女比例是1:1，并且没有并列名次。</p>
<h4 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h4><p>每行输出一组两个学生的姓名，其间以1个空格分隔。名次高的学生在前，名次低的学生在后。小组的输出顺序按照前面学生的名次从高到低排列。</p>
<h4 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">0 Amy</span><br><span class="line">1 Tom</span><br><span class="line">1 Bill</span><br><span class="line">0 Cindy</span><br><span class="line">0 Maya</span><br><span class="line">1 John</span><br><span class="line">1 Jack</span><br><span class="line">0 Linda</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Amy Jack</span><br><span class="line">Tom Linda</span><br><span class="line">Bill Maya</span><br><span class="line">Cindy John</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路-1"><a href="#个人解题思路-1" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>直接整个结构体,遍历完事,需要注意的是访问过了就不能再次访问了</p>
<p>AC代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">S</span>&#123;</span><br><span class="line">	<span class="type">int</span> sex;<span class="comment">//性别</span></span><br><span class="line">	<span class="type">char</span> name[<span class="number">10</span>];<span class="comment">//姓名</span></span><br><span class="line">	<span class="type">int</span> vi;<span class="comment">//访问标志</span></span><br><span class="line">&#125;stu[<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>,&amp;stu[i].sex,stu[i].name);</span><br><span class="line">		stu[i].vi=<span class="number">0</span>;<span class="comment">//初始化0,默认没有访问过</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n/<span class="number">2</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=n<span class="number">-1</span>;j&gt;=n/<span class="number">2</span>;j--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(stu[j].sex!=stu[i].sex&amp;&amp;stu[j].vi==<span class="number">0</span>)<span class="comment">//性别不一样并且没有访问过</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,stu[i].name,stu[j].name);</span><br><span class="line">				stu[i].vi=<span class="number">1</span>;<span class="comment">//已经访问过了</span></span><br><span class="line">				stu[j].vi=<span class="number">1</span>;<span class="comment">//已经访问过了</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="出租"><a href="#出租" class="headerlink" title="出租"></a><strong>出租</strong></h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805107638517760">原题链接</a></strong></p>
<p>下面是新浪微博上曾经很火的一张图：</p>
<p><img data-src="https://images.ptausercontent.com/187" alt="img"></p>
<p>一时间网上一片求救声，急问这个怎么破。其实这段代码很简单，<code>index</code>数组就是<code>arr</code>数组的下标，<code>index[0]=2</code> 对应 <code>arr[2]=1</code>，<code>index[1]=0</code> 对应 <code>arr[0]=8</code>，<code>index[2]=3</code> 对应 <code>arr[3]=0</code>，以此类推…… 很容易得到电话号码是<code>18013820100</code>。</p>
<p>本题要求你编写一个程序，为任何一个电话号码生成这段代码 —— 事实上，只要生成最前面两行就可以了，后面内容是不变的。</p>
<h4 id="输入格式：-3"><a href="#输入格式：-3" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在一行中给出一个由11位数字组成的手机号码。</p>
<h4 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a>输出格式：</h4><p>为输入的号码生成代码的前两行，其中<code>arr</code>中的数字必须按递减顺序给出。</p>
<h4 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18013820100</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int[] arr = new int[]&#123;8,3,2,1,0&#125;;</span><br><span class="line">int[] index = new int[]&#123;3,0,4,3,1,0,2,4,3,4,4&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路-2"><a href="#个人解题思路-2" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>用数组保存号码中出现过的数字，记得按递减顺序，将号码与该数组进行比较，输出下标即可。</p>
<p>ac代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> data)</span><span class="comment">//查找某个值在数组里的下标</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;arr[i]!=<span class="number">-1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i]==data)<span class="keyword">return</span> i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">11</span>];</span><br><span class="line">	<span class="type">int</span> visited[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="type">int</span> arr[<span class="number">10</span>];</span><br><span class="line">	<span class="type">int</span> index[<span class="number">11</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">11</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		arr[i]=<span class="number">-1</span>;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		visited[a[i]-<span class="string">&#x27;0&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">9</span>,j=<span class="number">0</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(visited[i]==<span class="number">1</span>)&#123;</span><br><span class="line">			arr[j]=i;<span class="comment">//将号码出现过的数按递减顺序保存到arr中</span></span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;int[] arr = new int[]&#123;&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;arr[i]!=<span class="number">-1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(arr[i+<span class="number">1</span>]==<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,arr[i]);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,arr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;&#125;;\nint[] index = new int[]&#123;&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;a[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i+<span class="number">1</span>]==<span class="string">&#x27;\0&#x27;</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">find</span>(arr,a[i]-<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,<span class="built_in">find</span>(arr,a[i]-<span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;&#125;;&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="列车调度"><a href="#列车调度" class="headerlink" title="列车调度"></a>列车调度</h3><p><strong><a href="https://pintia.cn/problem-sets/994805046380707840/problems/994805063166312448">原题链接</a></strong></p>
<p>火车站的列车调度铁轨的结构如下图所示。</p>
<p><img data-src="https://images.ptausercontent.com/188" alt="img"></p>
<p>两端分别是一条入口（Entrance）轨道和一条出口（Exit）轨道，它们之间有<code>N</code>条平行的轨道。每趟列车从入口可以选择任意一条轨道进入，最后从出口离开。在图中有9趟列车，在入口处按照{8，4，2，5，3，9，1，6，7}的顺序排队等待进入。如果要求它们必须按序号递减的顺序从出口离开，则至少需要多少条平行铁轨用于调度？</p>
<h4 id="输入格式：-4"><a href="#输入格式：-4" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入第一行给出一个整数<code>N</code> (2 ≤ <code>N</code> ≤105)，下一行给出从1到<code>N</code>的整数序号的一个重排列。数字间以空格分隔。</p>
<h4 id="输出格式：-4"><a href="#输出格式：-4" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中输出可以将输入的列车按序号递减的顺序调离所需要的最少的铁轨条数。</p>
<h4 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">8 4 2 5 3 9 1 6 7</span><br></pre></td></tr></table></figure>

<h4 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h4 id="个人解题思路-3"><a href="#个人解题思路-3" class="headerlink" title="个人解题思路:"></a>个人解题思路:</h4><p>可以用以下的动态图来得出最少的铁轨条数是4.</p>
<p><img data-src="/%E5%A4%A9%E6%A2%AF%E8%AE%AD%E7%BB%83%E8%B5%9B(1.28~2.03)/64f9038a4e405451.gif"></p>
<p>要想列车按序号递减的顺序从出口离开，在平行铁轨上的列车必须是有序的，即铁轨上的列车序号必须是递减的。由于题目不需要记录所有的编号，只需要输出最小的铁轨数量，所以只需要记录最小的列车编号即可，而通过观察动图推导出，进入的列车序号只有比每一条铁轨最后的序号大才需要另一条铁轨，比如8，4，2进入一条铁轨，5比2大，只能进入第二条，由这样的规律可以推导出：</p>
<p><img data-src="/%E5%A4%A9%E6%A2%AF%E8%AE%AD%E7%BB%83%E8%B5%9B(1.28~2.03)/c34aa05a580675fd.gif"></p>
<p>请读者自行模拟其过程</p>
<p>最后可以利用set的lower_bound函数来求解</p>
<p>ac代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; sc;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">        set&lt;<span class="type">int</span>&gt;::iterator it = sc.<span class="built_in">lower_bound</span>(t);<span class="comment">//寻找出比t大的第一个元素</span></span><br><span class="line">        <span class="keyword">if</span>(it!=sc.<span class="built_in">end</span>())<span class="comment">//找得到的话</span></span><br><span class="line">        &#123;</span><br><span class="line">            sc.<span class="built_in">erase</span>(*it);</span><br><span class="line">            sc.<span class="built_in">insert</span>(t);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            sc.<span class="built_in">insert</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sc.<span class="built_in">size</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法</category>
        <category>训练赛</category>
      </categories>
      <tags>
        <tag>算法训练</tag>
        <tag>PTA</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Web应用程序</title>
    <url>/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>环境搭建完后，开始搭建Web应用程序。</p>
<h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>选择Spring lnitializr</p>
<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE.png" class="">

<span id="more"></span>

<p>选择SpringWeb，创建完成</p>
<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E9%80%89%E6%8B%A9SpringWeb.png" class="">

<h2 id="创建Controller"><a href="#创建Controller" class="headerlink" title="创建Controller"></a>创建Controller</h2><p>在com.example.demo包下创建HelloController</p>
<p>其中@RestController注解表示返回字符串，一般用于接口</p>
<p>而@Controller注解表示返回html页面，一般用于Html、Jquery</p>
<p>@RequestMapping注解则表示路由，用来映射URL； 注解的value、method、params及headers分别指定“请求的URL、请求方法、请求参数及请求头”</p>
<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E5%88%9B%E5%BB%BAContronller.png" class="">

<h2 id="添加符合RESTful风格的接口"><a href="#添加符合RESTful风格的接口" class="headerlink" title="添加符合RESTful风格的接口"></a>添加符合RESTful风格的接口</h2><p>下面我们添加几个符合<a href="https://restfulapi.cn/">RESTful</a>风格的接口</p>
<p>其中@PostMapping对应增</p>
<p>其中@DeleteMapping对应删</p>
<p>其中@PutMapping对应改</p>
<p>其中@GetMapping对应查</p>
<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E5%85%B7%E6%9C%89RESTful%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%8E%A5%E5%8F%A3.png" class="">

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>用postman测试这4个方法</p>
<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E6%B5%8B%E8%AF%95PostMapping.png" class="">

<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E6%B5%8B%E8%AF%95DeleteMapping.png" class="">

<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E6%B5%8B%E8%AF%95PutMapping.png" class="">

<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E6%B5%8B%E8%AF%95GetMapping.png" class="">

<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>打包jar后上传到服务器，终端输入命令java -jar jar名称</p>
<p>将jar包放入后台跑：</p>
<img data-src="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B7%91jar%E5%8C%85.png" class="" title="服务器跑jar包">

<p>在postman上将localhost替换为服务器ip地址即可（需要<a href="https://developer.aliyun.com/article/767328">服务器开放端口</a>）</p>
<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建Web应用程序">搭建Web应用程序</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建集成Mybatis的Web应用程序">搭建集成Mybatis的Web应用程序</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>开发环境配置</title>
    <url>/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="基本开发环境安装脚本"><a href="#基本开发环境安装脚本" class="headerlink" title="基本开发环境安装脚本"></a>基本开发环境安装脚本</h2><h3 id="java"><a href="#java" class="headerlink" title="java"></a><strong>java</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">echo &quot;----------------------uninstall old java -----------------------&quot;</span><br><span class="line">rpm -qa | grep java | xargs rpm -e --nodeps</span><br><span class="line">rpm -qa | grep jdk | xargs rpm -e --nodeps</span><br><span class="line">rpm -qa | grep gcp | xargs rpm -e --nodeps</span><br><span class="line">sed -ie &#x27;/JAVA_HOME/d&#x27; /etc/profile</span><br><span class="line">echo &quot;finished&quot;</span><br><span class="line">echo &quot;---------------start yum install java-1.8.0-openjdk ----------------&quot;</span><br><span class="line">yum install java-1.8.0-openjdk* -y</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/profile&lt;&lt;EOF</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java</span><br><span class="line">export CLASSPATH=.:\$JAVA_HOME/lib/dt.jar:\$JAVA_HOME/lib/tools.jar:\$JAVA_HOME/jre/lib/rt.jar</span><br><span class="line">export PATH=\$PATH:\$JAVA_HOME/bin</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">java -version</span><br><span class="line"></span><br><span class="line">echo &quot;---------yum install java-1.8.0-openjdk success -----------&quot;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a><strong>nginx</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">echo &quot;-----------start install nginx ------------------&quot;</span><br><span class="line">yum install -y gcc-c++  </span><br><span class="line">yum -y install openssl openssl-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">if [ &#x27;grep &quot;nginx&quot; /etc/passwd | wc -l&#x27; ]; then</span><br><span class="line">echo &quot;adding user nginx&quot;</span><br><span class="line">groupadd nginx</span><br><span class="line">useradd -s /sbin/nologin -M -g nginx nginx</span><br><span class="line">else</span><br><span class="line">echo &quot;user nginx exsits&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;-----------------------downloading nginx-----------------&quot;</span><br><span class="line">wget http://nginx.org/download/nginx-1.21.3.tar.gz</span><br><span class="line">tar -xvf nginx-1.21.3.tar.gz</span><br><span class="line">cd nginx-1.21.3</span><br><span class="line"></span><br><span class="line">echo &quot;-------------------configuring nginx,plz wait----------------------&quot;</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_realip_module --with-http_stub_status_module</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo &quot;configure failed ,please check it out!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;make nginx, please wait for 20 minutes&quot;</span><br><span class="line">make</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo &quot;make failed ,please check it out!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;install nginx, please wait for 20 minutes&quot;</span><br><span class="line">make install</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">chown -R nginx.nginx /usr/local/nginx</span><br><span class="line">ln -s /lib64/libpcre.so.0.0.1 /lib64/libpcre.so.1</span><br><span class="line">cp /usr/local/nginx/sbin/nginx /usr/bin</span><br><span class="line">nginx</span><br><span class="line">iptables -I INPUT 3 -s 0.0.0.0/0 -p tcp --dport 80 -j ACCEPT</span><br><span class="line">echo &quot;---------------start install nginx success-------------------&quot;</span><br></pre></td></tr></table></figure>

<h3 id="mysql5-7"><a href="#mysql5-7" class="headerlink" title="mysql5.7"></a><strong>mysql5.7</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">#下载 提示：本脚本只支持centos 7 安装MySQL版本5.7</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.36-el7-x86_64.tar.gz</span></span><br><span class="line">REMOVE=`rpm -qa | grep -i mariadb-libs`</span><br><span class="line"><span class="meta">#</span><span class="language-bash">卸载系统预置的mariadb</span></span><br><span class="line">yum remove $REMOVE -y</span><br><span class="line"><span class="meta">#</span><span class="language-bash">安装依赖库</span></span><br><span class="line">yum install libaio -y</span><br><span class="line">yum install libncurses*</span><br><span class="line"><span class="meta">#</span><span class="language-bash">下载</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.36-el7-x86_64.tar.gz</span><br><span class="line">tar -zxvf mysql-5.7.36-el7-x86_64.tar.gz</span><br><span class="line">mv mysql-5.7.36-el7-x86_64 mysql</span><br><span class="line">mv mysql /usr/local/</span><br><span class="line">useradd -s/sbin/nlogin -M mysql</span><br><span class="line">id mysql</span><br><span class="line">mkdir /usr/local/mysql/&#123;data,log&#125;</span><br><span class="line">chown -R mysql.mysql /usr/local/mysql/</span><br><span class="line"><span class="meta">#</span><span class="language-bash">编辑my.cnf</span></span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">port = 3295</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line">server_id=10</span><br><span class="line">port = 3295</span><br><span class="line">user = mysql</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">default_storage_engine = innodb</span><br><span class="line">log_timestamps = SYSTEM</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">basedir = /usr/local/mysql</span><br><span class="line">datadir = /usr/local/mysql/data/</span><br><span class="line">pid-file = /usr/local/mysql/data/mysql.pid</span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 1000</span><br><span class="line">table_open_cache = 1024</span><br><span class="line">max_allowed_packet = 128M</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">####====================================[innodb]==============================</span></span></span><br><span class="line">innodb_buffer_pool_size = 1024M</span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_purge_threads = 2</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line">innodb_log_file_size = 512M</span><br><span class="line">innodb_log_files_in_group = 2</span><br><span class="line">innodb_log_buffer_size = 16M</span><br><span class="line">innodb_max_dirty_pages_pct = 80</span><br><span class="line">innodb_lock_wait_timeout = 30</span><br><span class="line">innodb_data_file_path=ibdata1:1024M:autoextend</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment">####====================================[log]==============================</span></span></span><br><span class="line">log_error = /usr/local/mysql/log/mysql-error.log </span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1 </span><br><span class="line">slow_query_log_file = /usr/local/mysql/log/mysql-slow.log</span><br><span class="line"> </span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"> </span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">编译</span></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --innodb_undo_tablespaces=3 --explicit_defaults_for_timestamp</span><br><span class="line"><span class="meta">#</span><span class="language-bash">授权</span></span><br><span class="line">chown -R mysql:mysql /usr/local/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line">chmod +x /etc/init.d/mysql</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig --list</span><br><span class="line">cp /usr/local/mysql/bin/* /usr/local/sbin/</span><br><span class="line">cd /lib/systemd/system</span><br><span class="line"><span class="meta">#</span><span class="language-bash"><span class="comment"># 启动服务并查看</span></span></span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line">netstat -lntup|grep mysql</span><br><span class="line">grep &quot;password&quot; /usr/local/mysql/log/mysql-error.log </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="mysql8-0"><a href="#mysql8-0" class="headerlink" title="mysql8.0"></a><strong>mysql8.0</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!/bin/env bash</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">使用</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">去到https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">选中合适的mysql版本并修改脚本中的链接</span></span><br><span class="line"></span><br><span class="line">export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin</span><br><span class="line"></span><br><span class="line">Install_MySQL() &#123;</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">CentOS 8 mysql: error <span class="keyword">while</span> loading shared libraries: libncurses.so.5</span></span><br><span class="line">	yum install ncurses ncurses-compat-libs -y</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Install dependencies</span></span><br><span class="line">	setenforce 0</span><br><span class="line">	yum -y install epel-release</span><br><span class="line">	yum -y install wget tar jemalloc jemalloc-devel gcc gcc-c++</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">MySQL configuration</span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">此处应当进行适当修改</span></span><br><span class="line">	mysql_version=&quot;8.0.26&quot;</span><br><span class="line">	mysql_password=&quot;123456&quot;</span><br><span class="line">	mkdir -p /apps/server/mysql/data</span><br><span class="line">	mysql_install_dir=&quot;/usr/local/mysql&quot;</span><br><span class="line">	mysql_data_dir=&quot;/usr/local/mysql/data&quot;</span><br><span class="line">	download_mysql=&quot;https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Download MySQL</span></span><br><span class="line">	cd /mnt</span><br><span class="line">	useradd -M -s /sbin/nologin mysql &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">	wget -c $&#123;download_mysql&#125;/MySQL-8.0/mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64.tar.xz --no-check-certificate</span><br><span class="line">    echo &quot;========== Start installing MySQL ============&quot;</span><br><span class="line">	tar xJf mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line">	mkdir $&#123;mysql_install_dir&#125;</span><br><span class="line">	mv mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64/* $&#123;mysql_install_dir&#125;/</span><br><span class="line">	</span><br><span class="line">	if [[ -d &quot;$&#123;mysql_install_dir&#125;/support-files&quot; ]]; then</span><br><span class="line">		rm -rf mysql-$&#123;mysql_version&#125;-linux-glibc2.12-x86_64</span><br><span class="line">	else</span><br><span class="line">		rm -rf $&#123;mysql_install_dir&#125;</span><br><span class="line">		echo &quot;Error: MySQL install failed, Please contact the author&quot;</span><br><span class="line">		kill -9 $$</span><br><span class="line">	fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Initialize the database</span></span><br><span class="line"><span class="meta">	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysqld --initialize-insecure --user=mysql --basedir=<span class="variable">$&#123;mysql_install_dir&#125;</span> --datadir=<span class="variable">$&#123;mysql_data_dir&#125;</span></span></span><br><span class="line">	chown -R root . $&#123;mysql_install_dir&#125;</span><br><span class="line">	chown -R mysql.mysql $&#123;mysql_data_dir&#125;</span><br><span class="line">	cp -f $&#123;mysql_install_dir&#125;/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@^basedir=.*@basedir=$&#123;mysql_install_dir&#125;@&quot; /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@^datadir=.*@datadir=$&#123;mysql_data_dir&#125;@&quot; /etc/init.d/mysqld</span><br><span class="line">	sed -i &quot;s@/usr/local/mysql@$&#123;mysql_install_dir&#125;@g&quot; $&#123;mysql_install_dir&#125;/bin/mysqld_safe</span><br><span class="line">	sed -i &#x27;s@executing mysqld_safe@executing mysqld_safe\nexport LD_PRELOAD=/usr/lib64/libjemalloc.so@&#x27; $&#123;mysql_install_dir&#125;/bin/mysqld_safe</span><br><span class="line"><span class="meta">	#</span><span class="language-bash">删除配置文件中原有的环境变量</span></span><br><span class="line">	sed -ie &#x27;/MYSQL_HOME/d&#x27; /etc/profile</span><br><span class="line"><span class="meta">	#</span><span class="language-bash">修改mysql的环境变量，直接写入配置文件</span></span><br><span class="line">	echo &quot;export MYSQL_HOME=$&#123;mysql_install_dir&#125;&quot; &gt;&gt;/etc/profile</span><br><span class="line">	echo &quot;export PATH=\$PATH:\$MYSQL_HOME/bin&quot; &gt;&gt;/etc/profile</span><br><span class="line">	source /etc/profile</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">my.conf configuration</span></span><br><span class="line">	cat &gt; /etc/my.cnf &lt;&lt; EOF</span><br><span class="line">[client]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">prompt=&quot;MySQL [\\d]&gt; &quot;</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port = 3306</span><br><span class="line">socket = /tmp/mysql.sock</span><br><span class="line">default_authentication_plugin = mysql_native_password</span><br><span class="line"></span><br><span class="line">basedir = $&#123;mysql_install_dir&#125;</span><br><span class="line">datadir = $&#123;mysql_data_dir&#125;</span><br><span class="line">pid-file = $&#123;mysql_data_dir&#125;/mysql.pid</span><br><span class="line">user = mysql</span><br><span class="line">bind-address = 0.0.0.0</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line">init-connect = &#x27;SET NAMES utf8mb4&#x27;</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_0900_ai_ci</span><br><span class="line"></span><br><span class="line">skip-name-resolve</span><br><span class="line"><span class="meta">#</span><span class="language-bash">skip-networking</span></span><br><span class="line">back_log = 300</span><br><span class="line"></span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">table_open_cache = 128</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line">tmp_table_size = 16M</span><br><span class="line"></span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line">key_buffer_size = 4M</span><br><span class="line"></span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line">log_bin = mysql-bin</span><br><span class="line">binlog_format = mixed</span><br><span class="line">binlog_expire_logs_seconds = 604800</span><br><span class="line"></span><br><span class="line">log_error = $&#123;mysql_data_dir&#125;/mysql-error.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">long_query_time = 1</span><br><span class="line">slow_query_log_file = $&#123;mysql_data_dir&#125;/mysql-slow.log</span><br><span class="line"></span><br><span class="line">performance_schema = 0</span><br><span class="line">explicit_defaults_for_timestamp</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">lower_case_table_names = 1</span></span><br><span class="line"></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"><span class="meta">#</span><span class="language-bash">default-storage-engine = MyISAM</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_open_files = 500</span><br><span class="line">innodb_buffer_pool_size = 64M</span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_thread_concurrency = 0</span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line">innodb_flush_log_at_trx_commit = 2</span><br><span class="line">innodb_log_buffer_size = 2M</span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">bulk_insert_buffer_size = 8M</span><br><span class="line">myisam_sort_buffer_size = 8M</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 500M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 8M</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line">read_buffer = 4M</span><br><span class="line">write_buffer = 4M</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">	# </span><span class="language-bash">Set up MySQL</span></span><br><span class="line">	chmod 600 /etc/my.cnf</span><br><span class="line">	chmod +x /etc/init.d/mysqld</span><br><span class="line">	cp /etc/init.d/mysqld /usr/bin</span><br><span class="line">	systemctl enable mysqld</span><br><span class="line">  	systemctl start mysqld</span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;create user root@&#x27;127.0.0.1&#x27; identified by \&quot;<span class="variable">$&#123;mysql_password&#125;</span>\&quot;;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;127.0.0.1&#x27; with grant option;&quot;</span></span></span><br><span class="line"><span class="meta"> 	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;grant all privileges on *.* to root@&#x27;localhost&#x27; with grant option;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -hlocalhost -e <span class="string">&quot;alter user root@&#x27;localhost&#x27; identified by \&quot;<span class="variable">$&#123;mysql_password&#125;</span>\&quot;;&quot;</span></span></span><br><span class="line"><span class="meta">  	$</span><span class="language-bash">&#123;mysql_install_dir&#125;/bin/mysql -uroot -p<span class="variable">$&#123;mysql_password&#125;</span> -e <span class="string">&quot;reset master;&quot;</span></span></span><br><span class="line">  	rm -rf /etc/ld.so.conf.d/&#123;mysql,mariadb,percona,alisql&#125;*.conf</span><br><span class="line">  	echo &quot;$&#123;mysql_install_dir&#125;/lib&quot; &gt; /etc/ld.so.conf.d/mysql_renwole.com.conf</span><br><span class="line">  	ldconfig</span><br><span class="line">  	echo &quot;========== MySQL installing Successfully =====&quot;</span><br><span class="line">	echo &quot;MySQL:&quot;</span><br><span class="line">	echo &quot;account: root&quot;</span><br><span class="line">	echo &quot;password: $&#123;mysql_password&#125;&quot;</span><br><span class="line">	echo &quot;database: $&#123;mysql_data_dir&#125;&quot;</span><br><span class="line">	echo &quot;==============================================&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Install_MySQL</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a><strong>redis</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">!bin/sh</span></span><br><span class="line">cd ~</span><br><span class="line">FILE=/root/redis-5.0.8.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">判断文件是否存在</span></span><br><span class="line">if test -f &quot;$FILE&quot;; then</span><br><span class="line">    echo &quot;$FILE exist&quot;</span><br><span class="line">	else</span><br><span class="line">		wget http://download.redis.io/releases/redis-5.0.8.tar.gz</span><br><span class="line">fi</span><br><span class="line"><span class="meta"># </span><span class="language-bash">解压安装包</span></span><br><span class="line">tar -zxvf redis-5.0.8.tar.gz</span><br><span class="line"><span class="meta"># </span><span class="language-bash">重命名</span></span><br><span class="line">mv redis-5.0.8 redis</span><br><span class="line"><span class="meta"># </span><span class="language-bash">移动文件</span></span><br><span class="line">mv -f redis /usr/local/redis</span><br><span class="line"></span><br><span class="line">cd /usr/local/redis</span><br><span class="line">mkdir data</span><br><span class="line"></span><br><span class="line">make MALLOC=lib</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">cp /usr/local/redis/redis.conf /etc/redis/6354.conf</span><br><span class="line"></span><br><span class="line">cd /etc/init.d</span><br><span class="line">touch redis</span><br><span class="line">chmod 777 redis</span><br><span class="line">cat &lt;&lt; EOF &gt; redis</span><br><span class="line"></span><br><span class="line">REDISPORT=6354</span><br><span class="line">EXEC=/usr/local/redis/src/redis-server</span><br><span class="line">CLIEXEC=/usr/local/redis/src/redis-cli</span><br><span class="line">password=&quot;Admin123&quot;</span><br><span class="line"></span><br><span class="line">PIDFILE=/var/run/redis_$&#123;REDISPORT&#125;.pid</span><br><span class="line">CONF=&quot;/etc/redis/$&#123;REDISPORT&#125;.conf&quot;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        if [ -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;$PIDFILE exists, process is already running or crashed&quot;</span><br><span class="line">        else</span><br><span class="line">                echo &quot;Starting Redis server...&quot;</span><br><span class="line">                $EXEC $CONF</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ ! -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">                echo &quot;$PIDFILE does not exist, process is not running&quot;</span><br><span class="line">        else</span><br><span class="line">                PID=$(cat $PIDFILE)</span><br><span class="line">                echo &quot;Stopping ...&quot;</span><br><span class="line">                $CLIEXEC -a $password  -p $REDISPORT shutdown</span><br><span class="line">                while [ -x /proc/$&#123;PID&#125; ]</span><br><span class="line">                do</span><br><span class="line">                    echo &quot;Waiting for Redis to shutdown ...&quot;</span><br><span class="line">                    sleep 1</span><br><span class="line">                done</span><br><span class="line">                echo &quot;Redis stopped&quot;</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Please use start or stop as first argument&quot;</span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chkconfig --add redis</span><br><span class="line">chkconfig --list redis</span><br><span class="line"></span><br><span class="line">service redis start</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="maven（可选）"><a href="#maven（可选）" class="headerlink" title="maven（可选）"></a><strong>maven（可选）</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [ -z &quot;$&#123;MAVEN_HOME&#125;&quot; ]; then</span><br><span class="line">	echo &quot;----------------------------------start yum install maven -----------------------------&quot;</span><br><span class="line"><span class="meta">	</span></span><br><span class="line"><span class="meta">	#</span><span class="language-bash">下载maven 下载地址可更改</span></span><br><span class="line">	wget http://archive.apache.org/dist/maven/maven-3/3.8.3/binaries/apache-maven-3.8.3-bin.tar.gz</span><br><span class="line">	tar -xzvf apache-maven-3.8.3-bin.tar.gz</span><br><span class="line"><span class="meta">	</span></span><br><span class="line"><span class="meta">	#</span><span class="language-bash">拷贝maven到安装目录</span></span><br><span class="line">	rm -rf /usr/local/maven/</span><br><span class="line">	cp -f apache-maven-3.8.3/ /usr/local/maven/</span><br><span class="line">	</span><br><span class="line">	echo &quot;Begin to config environment variables,please waiting...&quot;</span><br><span class="line"><span class="meta">	</span></span><br><span class="line"><span class="meta">	#</span><span class="language-bash">删除配置文件中原有的环境变量</span></span><br><span class="line">	sed -ie &#x27;/MAVEN_HOME/d&#x27; /etc/profile</span><br><span class="line"><span class="meta">	</span></span><br><span class="line"><span class="meta">	#</span><span class="language-bash">修改maven的环境变量，直接写入配置文件</span></span><br><span class="line">	echo &quot;export MAVEN_HOME=/usr/local/maven&quot; &gt;&gt;/etc/profile</span><br><span class="line">	echo &quot;export PATH=\$PATH:\$MAVEN_HOME/bin&quot; &gt;&gt;/etc/profile</span><br><span class="line"><span class="meta">	</span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash">maven换源请参考网上教程</span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash"><span class="built_in">rm</span> -rf /usr/local/maven/conf/settings.xml</span></span><br><span class="line"><span class="meta">	# </span><span class="language-bash"><span class="built_in">cp</span> -f /root/settings.xml /usr/local/maven/conf</span></span><br><span class="line"><span class="meta">	</span></span><br><span class="line"><span class="meta">	#</span><span class="language-bash">运行后直接生效</span></span><br><span class="line">	source /etc/profile</span><br><span class="line">	echo &quot;----------------------------------yum install maven success -----------------------------&quot;</span><br><span class="line">else</span><br><span class="line">	echo &quot;本机已安装maven无需再次安装&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>将maven目录下的&#x2F;conf&#x2F;setting.xml替换成以下代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.2.0&quot;</span><br><span class="line">  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;pluginGroups&gt;&lt;/pluginGroups&gt;</span><br><span class="line"></span><br><span class="line">  &lt;proxies&gt;&lt;/proxies&gt;</span><br><span class="line"></span><br><span class="line">  &lt;servers&gt;&lt;/servers&gt;</span><br><span class="line"></span><br><span class="line">  &lt;mirrors&gt;</span><br><span class="line">    &lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;aliyunmaven&lt;/id&gt;</span><br><span class="line">      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">      &lt;name&gt;阿里云公共仓库&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;</span><br><span class="line">    &lt;/mirror&gt;</span><br><span class="line"></span><br><span class="line">    &lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;maven-default-http-blocker&lt;/id&gt;</span><br><span class="line">      &lt;mirrorOf&gt;external:http:*&lt;/mirrorOf&gt;</span><br><span class="line">      &lt;name&gt;Pseudo repository to mirror external repositories initially using HTTP.&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;http://0.0.0.0/&lt;/url&gt;</span><br><span class="line">      &lt;blocked&gt;true&lt;/blocked&gt;</span><br><span class="line">    &lt;/mirror&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/mirrors&gt;</span><br><span class="line"></span><br><span class="line">  &lt;profiles&gt;&lt;/profiles&gt;</span><br><span class="line">&lt;/settings&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="node（可选）"><a href="#node（可选）" class="headerlink" title="node（可选）"></a><strong>node（可选）</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if type node &gt;/dev/null 2&gt;&amp;1; then</span><br><span class="line">  echo &#x27;node 已安装&#x27;</span><br><span class="line">else</span><br><span class="line">  echo &#x27;node 未安装&#x27;</span><br><span class="line">fi</span><br><span class="line">echo &quot;-----------start yum install node ---------------&quot;</span><br><span class="line">wget https://cdn.npm.taobao.org/dist/node/latest-v16.x/node-v16.10.0-linux-x64.tar.gz</span><br><span class="line">tar -xvf node-v16.10.0-linux-x64.tar.gz</span><br><span class="line">mv node-v16.10.0-linux-x64 /usr/local/node</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">删除配置文件中原有的环境变量</span></span><br><span class="line">sed -ie &#x27;/NODE_HOME/d&#x27; /etc/profile</span><br><span class="line">sed -ie &#x27;/cnpm/d&#x27; /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">修改maven的环境变量，直接写入配置文件</span></span><br><span class="line">echo &quot;export NODE_HOME=/usr/local/node&quot; &gt;&gt;/etc/profile</span><br><span class="line">echo &quot;export PATH=\$NODE_HOME/bin:\$PATH&quot; &gt;&gt;/etc/profile</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">npm install -g cnpm -registry=https://registry.npm.taobao.org</span><br><span class="line">echo &quot;export PATH=/usr/local/node/lib/node_moudles/cnpm/bin:$PATH&quot; &gt;&gt;/etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">npm install npm -g</span><br><span class="line">source /etc/profile</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">cnpm -v</span><br><span class="line">echo &quot;-------yum install node success ----------&quot;</span><br></pre></td></tr></table></figure>

<h2 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h2><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建Web应用程序">搭建Web应用程序</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建集成Mybatis的Web应用程序">搭建集成Mybatis的Web应用程序</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建集成Mybatis的Web应用程序</title>
    <url>/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
    <content><![CDATA[<p>​        上期说到搭建一个SpringBoot程序，该程序创建的若干符合Restful风格的接口，同时返回一些字符串，但在实际情况中，返回的字符串是有查询数据库操作的，所以这期内容是搭建集成Mybatis的Web应用程序。</p>
<span id="more"></span>

<p>​        因为yml文件的好处是有天然的树状结构，配置和使用比较方便，所以我个人更推荐使用yml后缀的配置文件。</p>
<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E4%BD%BF%E7%94%A8properties%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" class="">

<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E4%BD%BF%E7%94%A8yml%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" class="">

<p>application.properties 切换到 application.yml步骤：</p>
<blockquote>
<p>​    修改后缀</p>
<p>​    重新修改程序</p>
<p>​    如下图依次点击Maven的clean、install即可</p>
</blockquote>
<p>​    <img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/maven%E7%9A%84clean%E5%92%8Cinstall%E6%93%8D%E4%BD%9C.png" class=""></p>
<h3 id="创建数据库、建表"><a href="#创建数据库、建表" class="headerlink" title="创建数据库、建表"></a>创建数据库、建表</h3><p>使用Navicat创建mysql数据库</p>
<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93.png" class="">

<p>创建以下字段</p>
<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E5%88%9B%E5%BB%BA%E5%AD%97%E6%AE%B5.png" class="">

<p>最后输入表名</p>
<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%90%8D.png" class="">

<p>向user表插入一些数据</p>
<h3 id="添加MySQL驱动包和Mybatis集成依赖"><a href="#添加MySQL驱动包和Mybatis集成依赖" class="headerlink" title="添加MySQL驱动包和Mybatis集成依赖"></a>添加MySQL驱动包和Mybatis集成依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在根目录的pom.xml上添加以上代码，刷新依赖</p>
<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/maven%E5%88%B7%E6%96%B0%E4%BE%9D%E8%B5%96.png" class="">

<h3 id="添加数据库连接配置"><a href="#添加数据库连接配置" class="headerlink" title="添加数据库连接配置"></a>添加数据库连接配置</h3><img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/Mybatis%E9%85%8D%E7%BD%AE.png" class="">

<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png" class="">

<h3 id="创建用户实体类"><a href="#创建用户实体类" class="headerlink" title="创建用户实体类"></a>创建用户实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/10/22:42</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> userId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getUserId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserId</span><span class="params">(<span class="type">long</span> userId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userId = userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">boolean</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;userId=&quot;</span> + userId +</span><br><span class="line">                <span class="string">&quot;, userName=&#x27;&quot;</span> + userName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, sex=&quot;</span> + sex +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建用户api接口"><a href="#创建用户api接口" class="headerlink" title="创建用户api接口"></a>创建用户api接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/10/22:50</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户api接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getOneUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getOnUser</span><span class="params">(<span class="meta">@RequestParam(&quot;id&quot;)</span> <span class="type">long</span> id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.getOneUser(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="创建用户业务类"><a href="#创建用户业务类" class="headerlink" title="创建用户业务类"></a>创建用户业务类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/10/22:46</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户业务类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getOneUser</span><span class="params">(<span class="type">long</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建用户业务实现类"><a href="#创建用户业务实现类" class="headerlink" title="创建用户业务实现类"></a>创建用户业务实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service.imp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/10/22:46</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户业务实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getOneUser</span><span class="params">(<span class="type">long</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.selectUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建用户Mapper接口"><a href="#创建用户Mapper接口" class="headerlink" title="创建用户Mapper接口"></a>创建用户Mapper接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: panghai</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/05/10/22:45</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 用户Mapper接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">selectUserById</span><span class="params">(<span class="type">long</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建用户Mapper"><a href="#创建用户Mapper" class="headerlink" title="创建用户Mapper"></a>创建用户Mapper</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.demo.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select user_id,username,password from user where user_id=#&#123;user_id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动调试成功后，浏览器访问<a href="http://localhost:9090/user/getOneUser?id=1">http://localhost:9090/user/getOneUser?id=1</a></p>
<img data-src="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" class="">

<p>最后根据需求在创建其他类型的实体类以及业务类即可。</p>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol>
<li><p>com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown database ‘user’</p>
<p>原因：数据库名称有误</p>
</li>
<li><p>Field userService in com.example.demo.controller.UserController required a bean of type ‘com.example.demo.service.IUserService’ that could not be found.</p>
<p>原因：业务实现类没有添加注解<a href="https://blog.csdn.net/weixin_41315469/article/details/79574347">@Service</a></p>
</li>
<li><p>Field userMapper in com.example.demo.service.imp.UserServiceImpl required a bean of type ‘com.example.demo.mapper.UserMapper’ that could not be found.</p>
<p>原因：业务Mapper类没有添加注解@Mapper</p>
</li>
</ol>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="http://c.biancheng.net/mybatis/mapper.html">MyBatis Mapper（映射器）</a></p>
<p><a href="http://c.biancheng.net/mybatis/first-example.html">第一个MyBatis程序</a></p>
<h3 id="往期文章"><a href="#往期文章" class="headerlink" title="往期文章"></a>往期文章</h3><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建Web应用程序">搭建Web应用程序</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建集成Mybatis的Web应用程序">搭建集成Mybatis的Web应用程序</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库如何防止暴力破解</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​        一般来说，数据库作为数据存储工具是很敏感的，特别需要安全防护和容灾备份。在生产环境中数据库是在内网下才能进行连接，外网是不允许连接的，因为外网连接下很有可能被暴力破解。但有些时候又不得不开放外网连接，这时候就需要重视暴力破解了，而MySQL官方中提供了一个缓解暴力破解数据库的方法：当用户错误登陆次数达到一定次数时，在一段时间内禁止再次请求登录，从而避免了数据库被暴力破解。以下是<a href="https://dev.mysql.com/doc/mysql-security-excerpt/5.7/en/connection-control.html">官方文档</a>的原文描述：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">As of MySQL 5.7.17, MySQL Server includes a plugin library that enables</span><br><span class="line">administrators to introduce an increasing delay in server response to</span><br><span class="line">connection attempts after a configurable number of consecutive failed attempts. </span><br><span class="line">This capability provides a deterrent that slows down brute force attacks</span><br><span class="line">against MySQL user accounts. The plugin library contains two plugins:</span><br><span class="line"></span><br><span class="line">CONNECTION_CONTROL checks incoming connection attempts and adds a delay</span><br><span class="line">to server responses as necessary. </span><br><span class="line">This plugin also exposes system variables that enable its operation to be </span><br><span class="line">configured and a status variable that provides rudimentary monitoring information.</span><br><span class="line"></span><br><span class="line">The CONNECTION_CONTROL plugin uses the audit plugin interface </span><br><span class="line">(see Writing Audit Plugins). To collect information, it subscribes</span><br><span class="line">to the MYSQL_AUDIT_CONNECTION_CLASSMASK event class, and processes </span><br><span class="line">MYSQL_AUDIT_CONNECTION_CONNECT and MYSQL_AUDIT_CONNECTION_CHANGE_USER</span><br><span class="line">subevents to check whether the server should introduce a delay before</span><br><span class="line">responding to connection attempts.</span><br><span class="line"></span><br><span class="line">CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS implements an INFORMATION_SCHEMA</span><br><span class="line">table that exposes more detailed monitoring information for failed</span><br><span class="line">connection attempts.</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="安装Connection-Control插件"><a href="#安装Connection-Control插件" class="headerlink" title="安装Connection-Control插件"></a>安装Connection-Control插件</h3><p>1、通过命令行安装<br>    在不影响MySQL对外提供服务的情况下安装插件，可在MySQL命令行执行以下语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSTALL PLUGIN CONNECTION_CONTROL SONAME &#x27;connection_control.so&#x27;;</span><br><span class="line">INSTALL PLUGIN CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS SONAME &#x27;connection_control.so&#x27;;</span><br></pre></td></tr></table></figure>

<img data-src="/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/%E5%AE%89%E8%A3%85CONNECTION_CONTROL%E6%8F%92%E4%BB%B6.png" class="">

<p>​    如果需要卸载则可以执行语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UNINSTALL PLUGIN CONNECTION_CONTROL;</span><br><span class="line">UNINSTALL PLUGIN CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS;</span><br></pre></td></tr></table></figure>

<p>​    查询插件安装信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select plugin_name, plugin_status, plugin_type, plugin_library load_option from information_schema.plugins where plugin_name like &#x27;%CONTROL%&#x27;</span><br></pre></td></tr></table></figure>

<img data-src="/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/%E6%9F%A5%E8%AF%A2CONNECTION_CONTROL%E6%8F%92%E4%BB%B6.png" class="">

<p>2、通过配置文件安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">plugin-load-add=connection_control.so</span><br></pre></td></tr></table></figure>

<p>​    为了避免插件的功能被删除，我们可以在MySQL的my.cnf配置文件中声明强制启用Connection-Control插件，从而避免被删除。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">connection-control=FORCE_PLUS_PERMANENT</span><br><span class="line">connection-control-failed-login-attempts=FORCE_PLUS_PERMANENT</span><br></pre></td></tr></table></figure>

<p>​    当尝试卸载时，MySQL给出错误提示<img data-src="/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/%E9%98%B2%E6%AD%A2CONNECTION_CONTROL%E6%8F%92%E4%BB%B6%E8%A2%AB%E5%8D%B8%E8%BD%BD.png" class=""></p>
<p>​    配置完后需要重启MySQL服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart mysql</span><br></pre></td></tr></table></figure>

<h3 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h3><p>connection_control_failed_connections_threshold的意义：</p>
<p>​        1、登陆失败次数限制</p>
<p>​        2、当有任何一次登录成功后，累计失败的值将重新从0开始累计统计。</p>
<p>​        3、如果这个值设置为0，则表示禁用统计失败的功能。</p>
<p>connection_control_min_connection_delay的意义：</p>
<p>​        查过失败次数后，再登录的时候，最小的重试间隔，单位为毫秒</p>
<p>通过命令行设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET GLOBAL connection_control_failed_connections_threshold = 3;</span><br><span class="line">SET GLOBAL connection_control_min_connection_delay = 5000;</span><br></pre></td></tr></table></figure>

<p>通过配置文件设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">connection_control_failed_connections_threshold=3</span><br><span class="line">connection_control_min_connection_delay=4000</span><br></pre></td></tr></table></figure>

<p>注意：在命令行中设置参数的优先级比配置文件的参数设置高，即在命令行设置参数会覆盖掉配置文件的参数，但服务重启后会加载配置文件的参数</p>
<h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>​    由于我们设置失败限制登陆次数为3，延迟为5000毫秒，故效果如下</p>
<img data-src="/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/%E7%99%BB%E9%99%86%E5%A4%B1%E8%B4%A5%E5%BB%B6%E8%BF%9F%E5%9B%BE%E8%A7%A3.gif" class="">]]></content>
      <categories>
        <category>专栏</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库安全</tag>
        <tag>暴力破解</tag>
      </tags>
  </entry>
  <entry>
    <title>添加SSH公钥</title>
    <url>/%E6%B7%BB%E5%8A%A0SSH%E5%85%AC%E9%92%A5/</url>
    <content><![CDATA[<p>最近想要无密码登陆linux服务器，故记录步骤如下：</p>
<p>1、在windows系统的cmd命令行上执行生成密钥对命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>

<p>2、将生成的id_rsa.pub公钥内容复制到远程服务器上的&#x2F;.ssh&#x2F;authorized_keys(不存在则手动创建)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch /.ssh/authorized_keys #文件不存在时手动创建</span><br><span class="line">vim /.ssh/authorized_keys #编辑authorized_keys文件</span><br></pre></td></tr></table></figure>

<p>3、导入密钥，打开xshell-&gt;工具-&gt;用户密钥管理者-&gt;导入选项，导入刚刚生成的id_rsa密钥文件</p>
<p>4、登录服务器，选择密钥登录并选择刚刚导入成功的密钥文件，即可完成无密码登录。</p>
<p>5、（可选）取消密码登录，加强服务器安全性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config #编辑ssh配置文件</span><br><span class="line"><span class="meta">#</span><span class="language-bash">将PasswordAuthentication处的值改为no</span></span><br><span class="line">service sshd restart #重启ssh服务</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>无密码登录</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转Jenkins</title>
    <url>/%E7%8E%A9%E8%BD%ACJenkins/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>​          Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具。它可以根据设定持续定期编译，运行相应代码；运行UT或集成测试；将运行结果发送至邮件，或展示成报告。</p>
<p>​         本文将介绍Jenkins的下载安装，Jenkins集成邮件服务系统、SVN版本控制工具，Ant构建工具以及静态分析工具Checkstyle、Findbugs、PMD，运用流水线</p>
<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>​        <a href="/Jenkins%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/" title="Jenkins的下载安装">Jenkins的下载安装</a></p>
<p>​        Jenkins集成邮件服务系统</p>
<p>​        SVN版本控制工具</p>
<p>​        Jenkins配置ant、maven、java、git</p>
<p>​        Jenkins集成静态分析工具Checkstyle、Findbugs、PMD</p>
<p>​        Jenkins集成流水线</p>
<p>​        CI&#x2F;CD</p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>Jenkins</tag>
        <tag>CI/CD</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转STL</title>
    <url>/%E7%8E%A9%E8%BD%ACSTL/</url>
    <content><![CDATA[<p>(￣▽￣)～■□～(￣▽￣)</p>
<p>记录C++的STL库</p>
<h5 id="专栏目录"><a href="#专栏目录" class="headerlink" title="专栏目录"></a>专栏目录</h5><h5 id=""><a href="#" class="headerlink" title=""></a><a href="/STL%E5%AE%B9%E5%99%A8-set/" title="STL容器-set">STL容器-set</a></h5>]]></content>
      <categories>
        <category>专栏</category>
        <category>数据结构</category>
        <category>STL</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转Valine评论系统</title>
    <url>/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>先上效果</p>
<img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E8%AF%84%E8%AE%BA%E7%95%8C%E9%9D%A2.png" class="">

<p>原本是用<a href="https://gitalk.github.io/">Gitalk</a>作为本博客的评论系统，但由于最近Gitalk不知什么原因网络错误，导致评论系统无法使用。</p>
<img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/gitalk.png" class="">

<p>故今天使用<a href="https://valine.js.org/">Valine</a>来替换<a href="https://gitalk.github.io/">Gitalk</a>，主要分为以下步骤：</p>
<span id="more"></span>

<h4 id="leancloud的使用"><a href="#leancloud的使用" class="headerlink" title="leancloud的使用"></a>leancloud的使用</h4><p>由于Valine是需要一个后端来支持它的评论系统，故先注册<a href="https://www.leancloud.cn/">leancloud</a>，注册完后首先实名认证，认证后创建应用，开发版即可。</p>
<img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E5%88%9B%E5%BB%BAleancloud%E5%BA%94%E7%94%A8.png" class="">

<h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4><img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" class="">

<p>变量解释如下：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>示例</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>ADMIN_URL</td>
<td><a href="https://gianter.top/">https://gianter.top</a></td>
<td>管理评论的域名（需备案），如不需要管理则不填</td>
</tr>
<tr>
<td>SENDER_NAME</td>
<td>笔尖少年</td>
<td>发件人</td>
</tr>
<tr>
<td>SITE_NAME</td>
<td>笔尖少年</td>
<td>[必填] 博客名称</td>
</tr>
<tr>
<td>SITE_URL</td>
<td><a href="https://panghai.top/">https://panghai.top</a></td>
<td>[必填] 博客网址</td>
</tr>
<tr>
<td>SMTP_PASS</td>
<td>xxxxxxxxxxxxxx</td>
<td>[必填] 邮箱授权码</td>
</tr>
<tr>
<td>SMTP_SERVICE</td>
<td>QQ</td>
<td>[必填] 邮箱类型</td>
</tr>
<tr>
<td>SMTP_USER</td>
<td><a href="mailto:&#x31;&#57;&#x38;&#50;&#x39;&#56;&#57;&#x31;&#51;&#x37;&#x40;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;">&#x31;&#57;&#x38;&#50;&#x39;&#56;&#57;&#x31;&#51;&#x37;&#x40;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;</a></td>
<td>[必填] 邮箱账号</td>
</tr>
<tr>
<td>TEMPLATE_NAME</td>
<td>rainbow</td>
<td>邮件模板（default和rainbow）</td>
</tr>
<tr>
<td>TO_EMAIL</td>
<td><a href="mailto:&#49;&#57;&#x38;&#50;&#57;&#56;&#x39;&#49;&#51;&#x37;&#x40;&#x71;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#49;&#57;&#x38;&#50;&#57;&#56;&#x39;&#49;&#51;&#x37;&#x40;&#x71;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a></td>
<td>指定站长收信邮箱</td>
</tr>
</tbody></table>
<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>依次点击云引擎-&gt;WEB-&gt;部署，git地址为<a href="https://github.com/DesertsP/Valine-Admin.git%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B5%8B%E8%AF%95%E6%88%90%E5%8A%9F%EF%BC%8C%E5%86%8D%E5%8E%BBfork%EF%BC%8C%E6%94%B9%E5%9B%9E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%93%E5%BA%93%E5%90%8D%EF%BC%8C%E6%AF%94%E8%BE%83%E7%A8%B3%E5%AE%9A%E3%80%82">https://github.com/DesertsP/Valine-Admin.git，如果测试成功，再去fork，改回自己的仓库名，比较稳定。</a></p>
<p>选择master分支后部署，第一次有点久。</p>
<img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E9%83%A8%E7%BD%B2.png" class="">

<h4 id="后台评论管理"><a href="#后台评论管理" class="headerlink" title="后台评论管理"></a>后台评论管理</h4><p>点击 云引擎 -&gt; WEB -&gt;设置 -&gt; 绑定新域名，添加已备案的域名，去域名商添加CNAME记录，稍后即可绑定成功。</p>
<h4 id="添加管理员账号"><a href="#添加管理员账号" class="headerlink" title="添加管理员账号"></a>添加管理员账号</h4><p>点击 存储 -&gt; 结构化数据，选择_User如果有内容，全部删除，这里是需要新建后台管理的账户。<br>选择_User -&gt; 添加行，只需要填写password、username。</p>
<h4 id="登录后台评论"><a href="#登录后台评论" class="headerlink" title="登录后台评论"></a>登录后台评论</h4><p>填写刚刚设置的username、password即可。</p>
<img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E8%AF%84%E8%AE%BA%E7%AE%A1%E7%90%86.png" class="">

<h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><p>LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行：每天必须休眠 6 个小时，30 分钟内没有外部请求，则休眠所以需要定时任务进行休眠，步骤如下</p>
<p>1、点击云引擎-&gt; 定时任务，创建定时任务，名称任意，生产环境选择self-wake云函数，Cron表达式填入0 *&#x2F;20 7-23 * * ?，表示每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。</p>
<p>2、配置定时检查，创建定时任务，名称任意，生产环境选择resend-mails云函数，Cron表达式填入0 0 8 * * ?，表示每天早8点检查过去24小时内漏发的通知邮件并补发</p>
<h4 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h4><p>修改在blog&#x2F;themes&#x2F;next目录下的_config.yml</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">xxxxxxxxxxxxx</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">xxxxxxxxxxxx</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">true</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">欢迎留言，一起进步</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">true</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<p>重新部署后测试一下：</p>
<img data-src="/%E7%8E%A9%E8%BD%ACValine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/%E6%B5%8B%E8%AF%95%E8%AF%84%E8%AE%BA.png" class="">

<p>完成！</p>
<h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://blog.csdn.net/Aoman_Hao/article/details/105323917">Hexo博客Next主题valine评论系统邮件提醒</a></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>博客搭建</category>
        <category>Valine</category>
      </categories>
      <tags>
        <tag>Valine</tag>
      </tags>
  </entry>
  <entry>
    <title>玩转服务器</title>
    <url>/%E7%8E%A9%E8%BD%AC%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>(￣▽￣)～■□～(￣▽￣)</p>
<p>记录如何部署Web程序到服务器</p>
<h2 id="专栏目录"><a href="#专栏目录" class="headerlink" title="专栏目录"></a>专栏目录</h2><p><strong><a href="/Linux%E3%80%81Shell%E4%BB%8B%E7%BB%8D/" title="Linux、Shell介绍">Linux、Shell介绍</a></strong></p>
<p><strong><a href="/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" title="开发环境配置">开发环境配置</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BAWeb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建Web应用程序">搭建Web应用程序</a></strong></p>
<p><strong><a href="/%E6%90%AD%E5%BB%BA%E9%9B%86%E6%88%90Mybatis%E7%9A%84Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="搭建集成Mybatis的Web应用程序">搭建集成Mybatis的Web应用程序</a></strong></p>
]]></content>
      <categories>
        <category>专栏</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>玩转服务器</tag>
      </tags>
  </entry>
</search>
